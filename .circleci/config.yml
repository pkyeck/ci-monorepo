version: 2.1

orbs:
  multirepo: dnephin/multirepo@0.0.7


jobs:

  audit:
    docker: # run the steps with Docker
      - image: circleci/node:10.16.3
    working_directory: ~/project/api
    steps:
      - checkout
      # - run: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > /home/circleci/.npmrc
      - run: npm audit

  # API job ###################################################################
  api:
    parameters:
      package_name:
        type: string
      upstream_branch:
        type: string
        default: origin/master
    
    docker: # run the steps with Docker
      - image: circleci/node:10.16.3
    working_directory: ~/project/<< parameters.package_name >>

    steps:
      - checkout:
          path: ~/project
      - multirepo/run-job-for-paths:
          paths: ~/project/<< parameters.package_name >>
          upstream_branch: << parameters.upstream_branch >>
          working_directory: ../
      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-
      - run: yarn install --frozen-lockfile
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
      - run:
          name: run unit tests
          command: yarn jest --ci --reporters="jest-junit" --coverage
          environment:
            JEST_JUNIT_OUTPUT: "reports/junit/js-test-results.xml"
      - store_test_results:
          path: reports/junit
      - store_artifacts:
          path: reports/junit

  # APP job ###################################################################
  app:
    parameters:
      package_name:
        type: string
      upstream_branch:
        type: string
        default: origin/master
    
    docker: # run the steps with Docker
      - image: circleci/node:10.16.3
    working_directory: ~/project/<< parameters.package_name >>

    steps:
      - checkout:
          path: ~/project
      - multirepo/run-job-for-paths:
          paths: ~/project/<< parameters.package_name >>
          upstream_branch: << parameters.upstream_branch >>
          working_directory: ../
      - run: echo "something changed - run tests"
      - run: pwd

  # AUTH job ###################################################################
  auth:
    parameters:
      package_name:
        type: string
      upstream_branch:
        type: string
        default: origin/master
    
    docker: # run the steps with Docker
      - image: circleci/node:10.16.3
    working_directory: ~/project/<< parameters.package_name >>

    steps:
      - checkout:
          path: ~/project
      - multirepo/run-job-for-paths:
          paths: ~/project/<< parameters.package_name >>
          upstream_branch: << parameters.upstream_branch >>
          working_directory: ../
      - run: echo "something changed - run tests"
      - run: pwd


workflows:
  version: 2

  test-branch:
    jobs:
      - audit:
          filters:
            branches:
              ignore: master
      - api:
          package_name: api
          requires: 
            - audit
          filters:
            branches:
              ignore: master
      - app:
          package_name: app
          requires: 
            - audit
          filters:
            branches:
              ignore: master
      - auth:
          package_name: auth
          requires: 
            - audit
          filters:
            branches:
              ignore: master